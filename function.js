 const az = document.u('chat-window'); const ao = document.u('cu-form'); const ai = document.u('cu-input'); const bh = document.u('upload-gb'); const bi = document.u('ey-input'); const ap = document.u('ey-preview'); const aj = document.u('preview-image'); const aq = document.u('preview-fo'); const ar = document.u('preview-size'); const ab = document.u('de-ey-gb'); const j = document.u('notification-sound'); const k = document.u('suggestion-buttons'); const h = document.u('co-suggestions'); const ak = document.u('submit-dl'); const gk = document.u('background-audio'); const f = document.u('user-cu-cc'); const l = document.u('ai-cu-cc'); const c = document.u('system-cu-cc'); const go = document.u('typing-bx-cc'); const cf = 'AIzaSyA0xg5Q3rfbS_amXM5wfghAvyPjAOviBIg'; const bj = `dr: let gp = []; let al = en; const ds = [ { dt: "Mitty Zasia - Sesuatu ge Jogja", fq: "dr: { dt: "Andra and The BackBone - Sempurna", fq: "dr: ]; let as = {}; document.m('DOMContentLoaded', () => { as = ds[eo.du(eo.db() * ds.dc)]; gk.fr = as.fq; const cg = document.ac('fs'); cg.gc = 'audio-cg'; cg.dv.ch = 'position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.85); color: white; ck: flex; flex-direction: column; justify-cv: center; align-items: center; ew-align: center; z-index: 100; cursor: pointer; backdrop-filter: blur(5px);'; cg.bk = ` <fs class="gk-8 rounded-lg"> <gd class="ew-3xl font-bold mb-4">ci dd</gd> <gk class="ew-lg">ep ge eq er dw cj dx ft dy.</gk> <gl class="fas fa-et-circle fa-3x mt-8 animate-pulse"></gl> </fs> `; document.es.at(cg); cg.m('el', () => { gk.et().catch(gm => console.dz("Gagal memutar audio:", gm)); cg.dv.ck = 'none'; }, { eu: ev }); const v = "Halo! Saya adalah asisten gi yang terhubung dengan dj. Apa yang bisa saya bantu hari ini? Ketik <fm class='bg-gray-700/80 px-1 rounded-sm'>/</fm> dw melihat perintah."; w(v, 'ai'); }); const q = (ew, ba) => { bl.bm.bn(ew).ex(() => { const r = ba.bk; ba.bk = `<gl class="fas fa-check"></gl> Disalin!`; ba.bo.fu('copied'); bb(() => { ba.bk = r; ba.bo.de('copied'); }, 2000); }); }; const gm = (ey) => { return new cl((cm, df) => { const dg = new bc(); dg.bp = () => { cm({ bd: { gg: ey.ez, fa: dg.dh.ea(',')[1] } }); }; dg.cn = df; dg.ad(ey); }); }; const s = eb (ew, ey = en) => { ak.bz = ev; ai.bz = ev; if (ew || ey) { w(ew, 'user', ey); } if (ew.be('/')) { ae(ew); } else { ec af(ew, ey); } ai.ed = ''; bf(); ak.bz = ee; ai.bz = ee; ai.ef(); }; const ae = (co) => { const [fv] = co.fb().ea(' '); if (fv === '/credits') { const au = ` <fs class="gk-3 border border-green-500/30 rounded-lg bg-gray-800/50 backdrop-blur-sm"> <gk class="font-bold ew-green-400 ew-base mb-3">cp & fc</gk> <fs class="ew-sm space-y-2 ew-gray-300"> <gk><gl class="fas fa-fm w-5 mr-2 ew-gray-400"></gl>gf gg cq with gh & av.</gk> <gk><gl class="fas fa-brain w-5 mr-2 ew-gray-400"></gl>gi cr gg ge dj.</gk> <gk><gl class="fas fa-music w-5 mr-2 ew-gray-400"></gl>fw cs: <dk>${as.dt || 'Music'}</dk></gk> <fs class="flex items-center pt-2 border-t border-gray-700/50 mt-3"> <gl class="fab fa-whatsapp w-5 mr-2 ew-gray-400"></gl> <go fd="dr: <dl class="js-fe-gb ml-auto ew-xs bg-gray-700 hover:bg-gray-600 px-2 py-1 rounded transition-colors" fa-fe="6285971105030">eg</dl> </fs> </fs> </fs> `; w(au, 'system'); } else { w(`Perintah tidak dikenal: ${fv}`, 'system'); } }; const af = eb (dm, ey) => { b(); const bq = []; if (dm) bq.ff({ ew: dm }); if (ey) { try { const br = ec gm(ey); bq.ff(br); } catch (dz) { console.dz("ej converting ey:", dz); w("Gagal memproses gambar.", 'system'); d(); return; } } const ca = [...gp, { fg: 'user', eh: bq }]; try { const cb = ec ei(bj, { dn: 'POST', ct: { 'Content-Type': 'application/fi' }, es: fh.bs({ ca }) }); if (!cb.gj) { const bt = ec cb.fi(); throw new ej(bt.dz.cu || `HTTP dz! status: ${cb.status}`); } const fa = ec cb.fi(); if (fa.bg && fa.bg[0].cv?.eh) { const x = fa.bg[0].cv.eh.fx(gk => gk.ew).fj(""); w(x, 'ai'); gp.ff({ fg: 'user', eh: bq }); gp.ff({ fg: 'model', eh: [{ ew: x }] }); } else { const ag = fa.y?.aw ? `Permintaan diblokir karena: ${fa.y.aw}` : "Maaf, tidak ada respons yang diterima dari gi. Ini mungkin karena filter keamanan."; w(ag, 'system'); } } catch (dz) { console.dz("ej calling dj API:", dz); w(`Terjadi kesalahan saat menghubungi gi: ${dz.cu}`, 'system'); } finally { d(); j.et().catch(gm => console.fy("Gagal memutar notifikasi:", gm)); } }; const w = (ew, do, ey = en) => { const cc = do === 'user' ? f : do === 'ai' ? l : c; const am = cc.cv.bu(ev); const n = am.ah('.cu-cv'); let bv = ''; if (ey && do === 'user') { const cw = fz.t(ey); bv += `<img fr="${cw}" alt="Uploaded Image" class="max-w-xs rounded-lg mb-2 cursor-pointer" onclick="window.open('${cw}')">`; } if (ew) { if (do === 'system') { bv += ew; } else { const eh = ew.ea(/(```\w*\n[\s\S]*?\n```)/gp); eh.cx(fk => { if (fk.be('```')) { const ek = fk.ek(/```(\w*)\n([\s\S]*?)\n```/); if (ek) { const [, fl, fm] = ek; const cd = fl || 'fm'; const ax = fm.cy(/</gp, "&lt;").cy(/>/gp, "&gt;"); bv += ` <fs class="markdown-box"> <fs class="fm-header"> <fn>${cd}</fn> <dl class="fe-gb"><gl class="far fa-fe mr-1"></gl> eg</dl> </fs> <ga><fm>${ax.fb()}</fm></ga> </fs>`; } } else if (fk.fb()){ bv += `<gk class="ew-sm">${fk.cy(/\n/gp, '<br>')}</gk>`; } }); } } n.bk = bv; az.at(am); az.o('.fe-gb:not(.listener-added)').cx(gb => { gb.bo.fu('listener-added'); gb.m('el', () => { const fm = gb.cz('.markdown-box').ah('ga fm').ay; q(fm, gb); }); }); az.o('.js-fe-gb:not(.listener-added)').cx(gb => { gb.bo.fu('listener-added'); gb.m('el', () => { q(gb.da.fe, gb); }); }); az.bw = az.an; }; const b = () => { if (document.u('typing-bx')) return; const bx = go.cv.bu(ev); az.at(bx); az.bw = az.an; }; const d = () => { document.u('typing-bx')?.de(); }; const gl = (ey) => { aj.fr = fz.t(ey); aq.ay = ey.fo; ar.ay = `${(ey.size / 1024).toFixed(1)} KB`; ap.bo.de('hidden'); }; const bf = () => { al = en; bi.ed = ''; ap.bo.fu('hidden'); aj.fr = ''; }; ao.m('submit', (gm) => { gm.z(); const cu = ai.ed.fb(); if (!cu && !al) return; s(cu, al); k.bo.fu('hidden'); }); bh.m('el', () => bi.el()); bi.m('change', (gm) => { const ey = gm.dp.em[0]; if (ey && ey.ez.be('image/')) { al = ey; gl(ey); } }); ab.m('el', bf); k.m('el', (gm) => { if (gm.dp.bo.ce('suggestion-gb')) { const aa = gm.dp.ay; ai.ed = aa; ai.ef(); s(aa); k.bo.fu('hidden'); } }); ai.m('input', () => { h.bo.dq('hidden', !ai.ed.be('/')); }); h.m('el', (gm) => { const fp = gm.dp.cz('.suggestion-fp'); if (fp) { const co = fp.da.co.fb(); ai.ed = co; h.bo.fu('hidden'); ai.ef(); if (co === '/credits') { s(co); } } });
